function rsReconfigMember(member){
  var cfg = rs.config()
  cfg.members.forEach(function(part,index,memberArray){
    if (member.host == part.host) {
      for(k in member){
        memberArray[index][k] = member[k]
      }
    }
  })
  return rs.reconfig(cfg)
}

function rsReconfigSettings(settings){
  var cfg = rs.config()
  cfg.settings = settings
  return rs.reconfig(cfg)
}

<% if @auth and @store_creds -%>
function authRequired() {
  try {
    db.serverCmdLineOpts();
    return false;
  } catch (err) {
    return true;
  }
}

if (authRequired()) {
  <%- if @replset -%>
    <%- if @admin_auth_mechanism == 'x509' -%>
  db.getMongo().setReadPref()
  try {
    db.getSiblingDB('$external').auth(
      {
        mechanism: 'MONGODB-X509'
      }
    )
  }
  catch (err) {
    // This isn't catching authentication errors as I'd expect...
    exit
  }
   <%- else -%>
  if (authRequired()) {
    // rs.slaveOk + rs secondaryOk have been deprecated, use setReadPref when running mongodb version >=5
    try {
      version=parseInt(db.version().split('.')[0])
      if (version>=5){
        db.getMongo().setReadPref('nearest')
      }
      else{
        rs.secondaryOk()
      }
    }
    catch (err) {
      rs.slaveOk()
    }
  try {
    var prev_db = db
    db = db.getSiblingDB('admin')
    db.auth('<%= @admin_username %>', '<%= @admin_password_unsensitive %>')
    db = db.getSiblingDB(prev_db)
  }
  catch (err) {
    // This isn't catching authentication errors as I'd expect...
    exit
  }
    <% end -%>
  <% end -%>
}
<% end -%>
